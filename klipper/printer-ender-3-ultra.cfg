# This file contains common pin mappings for the BIGTREETECH Manta E3EZ
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PB12/PB13)".

# See docs/Config_Reference.md for a description of parameters.
# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]

[stepper_x]
step_pin: PA14
dir_pin: !PA10
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC4
# position_endstop: 0
# position_max: 235
# homing_speed: 50
position_endstop: -2
# position_max: 220
# position_max: 235
# overrides ---
position_max: 220
position_min: -2
homing_speed: 50

[stepper_y]
step_pin: PC8
dir_pin: !PA15
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PB0
# position_endstop: 0
# position_max: 235
# homing_speed: 50
# overrides ---
position_endstop: -20
# position_endstop: 0
# position_max: 220
# position_max: 238
position_max: 220
# position_min: -13
# -40.5
position_min: -20
homing_speed: 50

[stepper_z]
step_pin: PD2
dir_pin: !PD4
enable_pin: !PD3
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC6
# position_endstop: 0
# position_max: 270
# overrides ---
position_max: 230
position_min: -4
endstop_pin: probe:z_virtual_endstop

[stepper_z1]
step_pin: PB7
dir_pin: !PB6
enable_pin: !PB4
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC6
endstop_pin: probe:z_virtual_endstop

[safe_z_home]
home_xy_position: 115,115 # Change coordinates to the center of your print bed
# speed: 50
# home_xy_position: 147, 154
speed: 75
z_hop: 15
z_hop_speed: 5
# move_to_previous: true

[extruder]
step_pin: PD5
dir_pin: PD6
enable_pin: !PB3
microsteps: 16
# rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB11 #HE0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4 #TH0
#control: pid
# pid_Kp: 21.527
# pid_Ki: 1.063
# pid_Kd: 108.982
min_temp: 0
# max_temp: 250
# overrides ---
gear_ratio: 42:12
rotation_distance: 26.359
# max_temp: 250
max_temp: 300
pressure_advance: 0.0375
pressure_advance_smooth_time: 0.040000
max_extrude_cross_section: 5
max_extrude_only_distance: 50000.0
#pid_kp: 24.629
#pid_ki: 1.710
#pid_kd: 88.663


#[filament_switch_sensor material_0]
#switch_pin: PC5

#[extruder1]
#step_pin: PB7
#dir_pin: PB6
#enable_pin: !PB4
#heater_pin: PB10 # HE1
#sensor_pin: PA5 # T1

[filament_motion_sensor encoder_sensor]
detection_length: 7
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: PB1
# changing the switch_pin name according to your motherboard
pause_on_runout: True
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PA3 #TB
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA8

[heater_fan fan1]
pin: PB15

[heater_fan fan2]
pin: PB14

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_3600560002504B5735313920-if00

[printer]
kinematics: cartesian
max_velocity: 300
# max_accel: 3000
max_accel: 3200
max_z_velocity: 5
max_z_accel: 100


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB8
#diag_pin: PC4
# run_current: 0.800
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC9
#diag_pin: PB0
# run_current: 0.800
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PD0
#diag_pin: PC6
# run_current: 0.650
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PB5
#diag_pin: PC6
# run_current: 0.650
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PD1
# run_current: 0.800
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

# [tmc2209 extruder1]
# uart_pin: PB5
# run_current: 0.800
# stealthchop_threshold: 999999

########################################
# TMC2130 configuration
########################################

#[tmc2130 stepper_x]
#cs_pin: PB8
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10
##diag1_pin: PF3
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_y]
#cs_pin: PC9
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10
##diag1_pin: PF4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_z]
#cs_pin: PD0
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10
##diag1_pin: PF5
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2130 extruder]
#cs_pin: PD1
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder1]
#cs_pin: PB5
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PC3, EXP1_5=PC0, EXP1_7=PA2, EXP1_9=<GND>,
    EXP1_2=PC2,  EXP1_4=<RST>, EXP1_6=PA0, EXP1_8=PA1, EXP1_10=<5V>

[bltouch]
sensor_pin: PA6
control_pin: PA7
# x_offset: -40
# y_offset: -10
x_offset: -31.8
# y_offset: -40.5
y_offset: 0
#z_offset:1.195
# for clone bltouch ie. 3d touch v3
# probe_with_touch_mode: false
# pin_up_reports_not_triggered: true
# for cr-touch
probe_with_touch_mode: true
stow_on_each_sample: false

#[output_pin PS_ON]
#pin: PA9

#[output_pin pb9_pin]
#pin: PB9

#[neopixel my_neopixel]
#pin: PC7

#[adxl345]
#cs_pin: PC15
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10

[bed_mesh]
speed: 120
# speed: 500
# horizontal_move_z: 15
# mesh_min: 10, 10
# mesh_max: 190, 220
# mesh_max: 180.5, 198.5
# mesh_min: 20, 20
mesh_min: 41.8,10
# mesh_max: 200, 197
# mesh_max: 188.2, 179.5
# 20mm padding
# mesh_max: 168.2, 159.5
# mesh_max: 200,194
# mesh_max: 215-31.8,228-40.5
# mesh_max: 220-31.8,228-0
mesh_max: 188.2,220
# calculate xmin, ymin and max firs -> then this
probe_count: 5,5
algorithm: bicubic

[bed_screws]
# screw1: 30.5, 37
# screw2: 30.5, 207
# screw3: 204.5, 207
# screw4: 204.5, 37
screw1: 20,29
screw2: 195, 29
screw3: 195, 213
screw4: 20, 213

[z_tilt]
# z_positions: 195, 117.5
#   20, 117.5
# add x,y offsets for bed probe
z_positions:
    51.8, 110
    195, 110
points:
    51.8, 110
    195, 110
speed: 120
retries: 5
# retry_tolerance: 0.02
retry_tolerance: 0.03
horizontal_move_z: 5

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

########################################
# User configuration
########################################

[virtual_sdcard]
path: ~/printer_data/gcodes

[input_shaper]
shaper_freq_x: 43.8
shaper_type_x: ei
shaper_freq_y: 41.4
shaper_type_y: ei

########################################
# gcodes and macros
########################################

# [gcode_macro BED_MESH_CALIBRATE]
# rename_existing: BASE_BED_MESH_CALIBRATE
# gcode:
#     #before the original gcode
#     BED_MESH_CLEAR
#     QUAD_GANTRY_LEVEL
#     G1 X125 Y125 Z5 F6000
#     #the original gcode
#     BASE_BED_MESH_CALIBRATE
#     #after the original gcode

[respond]

[gcode_macro OOZERETRACT]
description: Drop some filament for clean print
gcode:  
  # nozzle droop
  G91
  # 40 needed 
  G1 E-2 F2000
  G90
  # nozzle droop
  
[gcode_macro FILAMENTDROOP]
description: Drop some filament for clean print
gcode:
  {% set LENGTH = params.LENGTH|default(5)|int %}
  {% set PARK = params.PARK|default("false")|string %}
  {% set z_park_delta = params.Z_DELTA|default(20.0)|float %}

  
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}

  {% if PARK == "true" %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% endif %}
  
  # nozzle droop
  G91
  G1 E{LENGTH} F100
  G1 E-1 F2000
  G90
  G4 P5000
  # nozzle droop

[gcode_macro SAFE_HOME]
description: Home All Axes SAFELY
gcode:
  G28 Y
  G28 X
  BLTOUCH_DEBUG COMMAND=reset
  BLTOUCH_DEBUG COMMAND=pin_down
  G28 Z

[gcode_macro ZOFFSET]
description: Set z offset
gcode:
  PROBE_CALIBRATE

; https://gist.github.com/ChipCE/95fdbd3c2f3a064397f9610f915f7d02
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: DYN_BED_MESH_CALIBRATE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
  {% if params.AREA_START and params.AREA_END %}
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
  
    {% set area_min_x = params.AREA_START.split(",")[0]|float %}
    {% set area_min_y = params.AREA_START.split(",")[1]|float %}
    {% set area_max_x = params.AREA_END.split(",")[0]|float %}
    {% set area_max_y = params.AREA_END.split(",")[1]|float %}
    
    {% if bedMeshConfig.probe_count.split(",")|length == 2 %}
      {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
      {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
    {% else %}
      {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
      {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% endif %}
    
    {% set meshMaxPointX = meshPointX %}
    {% set meshMaxPointY = meshPointY %}
    
    
    {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
      {% if area_min_x - mesh_area_offset >=  safe_min_x %}
        {% set area_min_x = area_min_x - mesh_area_offset %}
      {% else %}
        {% set area_min_x = safe_min_x %}
      {% endif %}
      
      {% if area_min_y - mesh_area_offset >=  safe_min_y %}
        {% set area_min_y = area_min_y - mesh_area_offset %}
      {% else %}
        {% set area_min_y = safe_min_y %}
      {% endif %}
      
      {% if area_max_x + mesh_area_offset <=  safe_max_x %}
        {% set area_max_x = area_max_x + mesh_area_offset %}
      {% else %}
        {% set area_max_x = safe_max_x %}
      {% endif %}
      
      {% if area_max_y + mesh_area_offset <=  safe_max_y %}
        {% set area_max_y = area_max_y + mesh_area_offset %}
      {% else %}
        {% set area_max_y = safe_max_y %}
      {% endif %}
      
      {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
      {% if meshPointX < min_probe_count %}
        {% set meshPointX = min_probe_count %}
      {% endif %}
      {% if meshPointX > meshMaxPointX %}
        {% set meshPointX = meshMaxPointX %}
      {% endif %}
      
      {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
      {% if meshPointY < min_probe_count %}
        {% set meshPointY = min_probe_count %}
      {% endif %}
      {% if meshPointY > meshMaxPointY %}
        {% set meshPointY = meshMaxPointY %}
      {% endif %}
      
      {% set algorithm = "bicubic" %}
      {% if "algorithm" in bedMeshConfig %}
        {% set algorithm = bedMeshConfig.algorithm %}
      {% endif %}
      {% if meshPointX >=7 or meshPointY >=7 %}
        {% set algorithm = "bicubic" %}
      {% endif %}
      
      {% if enable_reference_index %}
          {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
          DYN_BED_MESH_CALIBRATE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
      {% else %}
          DYN_BED_MESH_CALIBRATE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
      {% endif %}
    {% else %}
      DYN_BED_MESH_CALIBRATE
    {% endif %}
  {% else %}
    DYN_BED_MESH_CALIBRATE
  {% endif %}
# end of bltouch section

# prime line
# plan to make this dynamic to area stard and end
[gcode_macro PRIME_LINE]
# variable_parameter_AREA_START : 0,0
# variable_parameter_AREA_END : 0,0
variable_parameter_OFFSET : 5
# variable_parameter_POSITION : 'top' # top | bottom | right | left ; --reverse
gcode:
    {% set offset = params.OFFSET|default(5)|int %}

    {% set xConfig = printer["configfile"].config["stepper_x"] %}
    {% set xBedMax = xConfig.position_max|int %}
    {% set yConfig = printer["configfile"].config["stepper_y"] %}
    {% set yBedMax = yConfig.position_max|int %}

    # {% set area_min_x = params.AREA_START.split(",")[0]|float %}
    # {% set area_min_y = params.AREA_START.split(",")[1]|float %}
    # {% set area_max_x = params.AREA_END.split(",")[0]|float %}
    # {% set area_max_y = params.AREA_END.split(",")[1]|float %}

    # calculate 4 points
    {% set xmax =  xBedMax - offset %}
    {% set xmin =  offset %}
    {% set ymax =  yBedMax - offset%}
    {% set ymin =  offset %}

    # Prime line sequence
	G1 Z5 F3000 ; lift
	G1 X{xmin} Y{ymin} F1500 ; move to prime position
	G1 Z0.15 F3000 ; get ready to prime
	G92 E0 ; reset extrusion distance
	G1 X{xmax} E30 F600 ; prime nozzle with adjusted extrusion / E__ based on how much you like
	
	# String removal circle after priming
	G1 Z0.2 F3000 ; adjust to 0.2mm above the bed
	G1 Y15 F10000 ; move the toolhead in the Y direction by 15 units
	
	# Execute the circle 3 times
	G2 I-5 J0 F10000 ; circle with 5mm radius
	G2 I-5 J0 F10000
	G2 I-5 J0 F10000

    
    # --- original code
	# # Prime line sequence
	# G1 Z5 F3000 ; lift
	# G1 X20 Y5 F1500 ; move to prime position
	# G1 Z0.15 F3000 ; get ready to prime
	# G92 E0 ; reset extrusion distance
	# G1 X200 E30 F600 ; prime nozzle with adjusted extrusion / E__ based on how much you like
	
	# # String removal circle after priming
	# G1 Z0.2 F3000 ; adjust to 0.2mm above the bed
	# G1 Y15 F10000 ; move the toolhead in the Y direction by 15 units
	
	# # Execute the circle 3 times
	# G2 I-5 J0 F10000 ; circle with 5mm radius
	# G2 I-5 J0 F10000
	# G2 I-5 J0 F10000
    # ---  end of original code
    
[gcode_macro START_PRINT]
variable_bed_temp: 60
variable_extruder_temp: 200
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:    
    # ----
    # PREHEAT PROCEDURE
    # ----

    # # Set and wait for nozzle to reach temperature
    # # M109 S{extruder_temp}
    M104 S{extruder_temp}
    # Start bed heating
    M140 S{bed_temp}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Wait for bed to reach temperature
    # M190 S{bed_temp}

    # ----
    # Dynamic Bed mesh calibrate START
    # ----
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    _TOOLHEAD_PARK_PAUSE_CANCEL
    # Set and wait for nozzle to reach temperature
    # M104 S{extruder_temp}
    M109 S{extruder_temp}
    M190 S{bed_temp}
    
    PRIME_LINE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}

    # Print message on LCD
    # FILAMENTDROOP PARK="true"
    M117 By your command!
# --------------------------------------------------------------------

# ---------------------------- End Print -----------------------------
[gcode_macro END_PRINT]
variable_machine_depth: 235
gcode:
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
    {% set z_park_delta = 10.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
      {% set z_safe = z_park_delta %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    {% if "xyz" in printer.toolhead.homed_axes %}
      G91
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
      {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
    # Disable steppers
    M84
    # Print message on LCD
    M117 That's All Folks
    OOZERETRACT
    # SAVE_CONFIG

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  OOZERETRACT
  _TOOLHEAD_PARK_PAUSE_CANCEL
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    # G1 E{extrude} F2100
    G1 E{extrude} F500
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  
  RESUME_BASE {get_params}
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro BED_TRAMMING]
description: Bed Tramming
gcode:
  G28
  BED_SCREWS_ADJUST

[gcode_macro BED_MESH_UPDATE]
description: Bed Mesh Update
gcode:
  G28
  BASE_BED_MESH_CALIBRATE
  SAVE_CONFIG


[bed_screws]
# screw1: 33, 33
# screw2: 202, 33
# screw3: 202, 202
# screw4: 33, 202
screw1: 20,29
screw2: 195, 29
screw3: 195, 213
screw4: 20, 213

[gcode_macro PREHEAT_NOZZLE]
description: Preheat nozzle to set temp
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=185

[gcode_macro PREHEAT_BED]
description: Preheat bed to set temp
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=50

# prime the nozzle 
[gcode_macro LEVEL_CHECK]
gcode:
    M117 Level Check
    M104 S200 ;set nozzle to 190
    M190 S50 ;set and wait till bed temp reaches 50

    G28
    M83 ;relative extrusion
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X5 Y5 Z0.2 F5000.0 ;Move to start position
    G1 X5 Y200.0 Z0.2 F1500.0 E15 ;Draw the first line
    G0 X10 Y200.0 Z0.2 F5000.0 ;Move to side a little
    G1 X10 Y1 Z0.2 F1500.0 E15 ;Draw the second line
    # move z axis 
    G0 Z20.0 F3000 ;Move Z Axis up
    # move to bed check position 
    G0 X33 Y202 Z0.2 F5000.0 ;Move to start position
    G1 X202 Y33 Z0.2 F1500.0 E23.9 ;Draw the first line
    G0 X202 Y202 Z0.2 F5000.0
    G1 X33 Y33 Z0.2 F1500.0 E23.9 ;Draw the second line
    G1 X202 Y33 Z0.2 F1500.0 E16.9 ;Draw the third line
    G1 X202 Y202 Z0.2 F1500.0 E16.9 ;Draw the fourth line
    G1 X33 Y202 Z0.2 F1500.0 E16.9 ;Draw the fifth line
    G1 X33 Y33 Z0.2 F1500.0 E16.9 ;Draw the sixth line
    G92 E0 ;Reset Extruder
    G0 Z20.0 F3000 ;Move Z Axis up

[gcode_macro DRY_LEVEL_CHECK]
gcode:
    M117 Level Check

    G28
    M83 ;relative extrusion               
    # move to bed check position 
    G0 X33 Y202 Z1.00 F5000.0 ;Move to start position
    G0 X202 Y33 Z1.00 F1500.0 ;Draw the first line
    G0 X202 Y202 Z1.00 F5000.0
    G0 X33 Y33 Z1.00 F1500.0 ;Draw the second line
    G0 X202 Y33 Z1.00 F1500.0 ;Draw the third line
    G0 X202 Y202 Z1.00 F1500.0 ;Draw the fourth line
    G0 X33 Y202 Z1.00 F1500.0 ;Draw the fifth line
    G0 X33 Y33 Z1.00 F1500.0 ;Draw the sixth line
    G92 E0 ;Reset Extruder
    G0 Z20.0 F3000 ;Move Z Axis up

[gcode_macro PROBE_CENTER]
gcode:
    M117 Probe Center

    G28
    M83 ;relative extrusion               
    # move to bed check position 
    G0 X146.8 Y155.5 F1500.0 ;Draw the first line
    G92 E0 ;Reset Extruder
    G0 Z20.0 F3000 ;Move Z Axis up

[gcode_macro PID_TUNER]
variable_parameter_EXTRUDER_TEMPERATURE : 200
variable_parameter_BED_TEMPERATURE : 60
gcode:
    PID_CALIBRATE HEATER=extruder TARGET={params.EXTRUDER_TEMPERATURE}
    PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMPERATURE}
    SAVE_CONFIG

[gcode_macro PRESSURE_ADVANCE_PREP]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020

[gcode_macro FIRSTLAYERPATCH]
description: Set z offset by printing a test print
gcode:
  PREHEAT_NOZZLE
  PREHEAD_BED
  SDCARD_PRINT_FILE FILENAME="First_Layer_Patch-0.25mm_PLA+_9m45s.gcode"

[gcode_macro BEDLEVELCHECK]
description: Check bed leveling
gcode:
  SDCARD_PRINT_FILE FILENAME="bed-check-0.2mm_PLA+_13m13s.gcode"

[exclude_object]

[idle_timeout] 
timeout: 43200
gcode:
    # 12 hours to time out
    # 3600 * 12
    {% if printer.pause_resume.is_paused %}
        # M118 Bypassed Timeout
        M117 Bypassed Timeout
    {% else %}
        # M118 Timeout Reached - Heaters and Motors Still On!
        M117 Timeout Reached - Heaters and Motors Still On!
        # comment this to bypass timeout
        TURN_OFF_HEATERS
        M84
    {% endif %}


[gcode_macro TEST_PROMPT]
description: Set z offset by printing a test print
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Question"
  RESPOND TYPE=command MSG="action:prompt_text Do you wont to cancel the print?"
  RESPOND TYPE=command MSG="action:prompt_footer_button continue| PROBE_CENTER | RESPOND type=command msg=action:prompt_end"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_PRINT|error"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro M600]
description: Manual filament change override
gcode:
  PAUSE
  
[gcode_arcs]
resolution: 0.1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.025000, 0.037500, 0.040000, 0.085000
#*# 	  0.068750, 0.003750, -0.023750, -0.031250
#*# 	  -0.015000, -0.062500, -0.066250, -0.038750
#*# x_count = 4
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 54.93000000000001
#*# max_x = 172.41
#*# min_y = 97.38
#*# max_y = 186.47
#*#
#*# [bltouch]
#*# z_offset = 1.060
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.456
#*# pid_ki = 1.960
#*# pid_kd = 89.288
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.874
#*# pid_ki = 1.087
#*# pid_kd = 1028.181
